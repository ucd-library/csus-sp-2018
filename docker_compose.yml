version: '2'

services:

  server:
    container_name: "${USERNAME}server"
    build: ./server
    volumes:
      - ./server/cli:/app/cli
      - ./server/controllers:/app/controllers
      - ./server/lib:/app/lib
      - ./server/models:/app/models
      - ./server/default-frames:/etc/fin/frames
      - ./server/default-transforms:/etc/fin/transforms
      - ./services/default-services.js:/etc/fin/default-services.js
      - ./server/backups:/fcrepo-backups
    ports:
      - ${PORT}:3001
      - 9229:9229
    env_file:
      - ./env_vars.env
    command: node app
    environment:
      - FIN_URL=${FIN_URL}

  fcrepo:
    container_name: "${USERNAME}fc_repo"
    build: ./fcrepo
    volumes:
      - fedora-data:/var/lib/jetty/fedora-data
      - ./server/backups:/var/lib/jetty/fcrepo-backups
    ports:
      - 8080:8080
      - 61613:61613
    environment:
      - FIN_URL=${FIN_URL}

  elasticsearch:
    container_name: "${USERNAME}elastic_search"
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    depends_on:
      - fcrepo

  redis:
    container_name: "${USERNAME}redis"
    image: redis:3.2
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    depends_on:
      - fcrepo

  trustedproxy:
    container_name: "${USERNAME}trusted_proxy"
    build: ./services/trusted-proxy
    volumes:
      - ./services/trusted-proxy/index.js:/service/index.js
    depends_on:
      - fcrepo
    env_file:
      - ./env_vars.env
    command: node service

  loris:
    container_name: "${USERNAME}loris"
    build: ./services/loris
    volumes:
      - loris-data:/usr/local/share/images/loris
      - ./services/loris/loris2.conf:/opt/loris/etc/loris2.conf
      - ./services/loris/start.py:/opt/loris/loris/start.py
    env_file:
      - ./env_vars.env
    depends_on:
      - fcrepo

  essync:
    container_name: "${USERNAME}es_sync"
    build: ./services/essync
    volumes:
      - ./services/essync/lib:/service/lib
      - ./services/essync/schema:/service/schema
      - ./services/essync/index.js:/service/index.js
      - ./services/essync/reindex.js:/service/reindex.js
    environment:
      - FIN_URL=${FIN_URL}
    env_file:
      - ./env_vars.env
    depends_on:
      - server
    command: node service

  ucd-lib-client:
    container_name: "${USERNAME}ucd_library_client"
    build: ./services/ucd-lib-client
    volumes:
      - ./services/ucd-lib-client/index.js:/service/index.js
      - ./services/ucd-lib-client/config.js:/service/config.js
      - ./services/ucd-lib-client/client:/service/client
      - ./services/ucd-lib-client/controllers:/service/controllers
      - ./services/ucd-lib-client/lib:/service/lib
      - ./services/ucd-lib-client/models:/service/models
    env_file:
      - ./env_vars.env
    environment:
    - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service

  basic-auth:
    container_name: "${USERNAME}basic_auth"
    build: ./services/basic-auth
    volumes:
      - ./services/basic-auth/index.js:/service/index.js
      - ./services/basic-auth/cli.js:/service/cli.js
      - ./services/basic-auth/controller.js:/service/controller.js
      - ./services/basic-auth/model.js:/service/model.js
      - ./services/basic-auth/lib:/service/lib
      - ./services/basic-auth/public:/service/public
    environment:
      - FIN_URL=${FIN_URL}
    env_file:
      - ./env_vars.env
    depends_on:
      - server
    command: node service

volumes:
  fedora-data:
    driver: local
  es-data:
    driver: local
  redis-data:
    driver: local
  loris-data:
    driver: local
  pg-data:
    driver: local

